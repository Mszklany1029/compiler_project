let 

 type any = {any : int}
 var buffer := getchar()

function readint(any: any) : int =
 let var i := 0
     function isdigit(s : string) : int = 
		  ord(buffer)>=ord("0") & ord(buffer)<=ord("9")
     function skipto() =
       while buffer=" " | buffer="\n"
         do buffer := getchar()
  in skipto();
     any.any := isdigit(buffer);
     while isdigit(buffer)
       do (i := i*10+ord(buffer)-ord("0"); buffer := getchar());
     i
 end

 type list = {first: int, rest: list}

 type alist = array of int

 function readlist() : list =
    let var any := any{any=0}
        var i := readint(any)
     in if any.any
         then list{first=i,rest=readlist()}
         else nil
    end

 function printint(i: int) =
  let function f(i:int) = if i>0 
	     then (f(i/10); print(chr(i-i/10*10+ord("0"))))
   in if i<0 then (print("-"); f(-i))
      else if i>0 then f(i)
      else print("0")
  end

 function printlist(l: list) =
   if l=nil then print("\n")
   else (printint(l.first); print(" "); printlist(l.rest))

 function printarray(l: alist, n : int) =
   for i := 0 to (n - 1) do (printint(l[i]); print(" "))

 function length (l : list) : int =
    if l = nil then 0 else 1 + length(l.rest)

 function toArray (l : list) : alist =
   let var a : alist := alist[length(l)] of 0
       var len := length(l)
   in
   for i := 0 to len - 1 do
    (a[i] := l.first;
    l := l.rest);
   a
   end
 
 function absoluteVal(i : int) : int =
 	if i >= 0 then i else 0 - i

function isqrt(i : int) : int = 
	let
		var x0 := i/2
		var x1 := (x0 + (i/x0))/2
	in 
		if(i <= 1) then x0 := i
		else(
			while (x1 < x0) do (
				x0 := x1;
				x1 := (x0 + (i/x0))/2
			)
		);
		x0
	end

 function exponent(i : int, j : int) : int = 
 	let
		var final := i
		var temp := j
	in

		if(temp = 1) then final := i;
		if(temp = 0) then final := 1 else
			for x := 0 to (temp-2) do(
				/*printint(final);
				print("\n");*/
				final := (final * i)
			);
			final
	end

function vector_norm(a : alist, l : int) : int = 
	let
		var sum := 0
		var ans := 0
	in 
		for i:= 0 to l-1 do(
			/*printint(exponent(a[i], 2));
			print("\n");*/
			sum := sum + exponent(a[i], 2)
			/*printint(sum);
			print("\n")*/
		);
		ans := isqrt(sum);
		ans
	end

   var list : list := readlist()
   var len := length(list)
   var alist := toArray(list)


  
 in
 printint(vector_norm(alist, len))
end
