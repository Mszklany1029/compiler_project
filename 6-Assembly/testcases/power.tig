/*
    A tiger program to efficiently calculate the power function
*/
let
    function pow (base : int, exp : int) : int = 
        let
            function even (number : int) : int =
                ((number / 2) * 2) = number
        in
            if exp = 0 then
                1
            else
                if exp = 1 then
                    base
                else
                    if even(exp) then
                        pow(base, exp / 2) * pow (base, exp / 2)
                    else
                        pow(base, (exp / 2) + 1) * pow (base, exp / 2)
        end
    
    function calc_power_and_print(base : int, exp : int) =
        let
            function printint(i: int) =
            let function f(i:int) = if i>0 
            then (f(i/10); print(chr(i-i/10*10+ord("0"))))
            in if i<0 then (print("-"); f(-i))
                else if i>0 then f(i)
                else print("0")
            end
        in
            (printint(pow(base, exp)); print("\n"))
        end

in
    calc_power_and_print(5, 4);
    calc_power_and_print(1, 0);
    calc_power_and_print(0, 0);
    calc_power_and_print(10, 10);
    calc_power_and_print(-1, 3);
    calc_power_and_print(-1, 2);
    calc_power_and_print(10, 15);
    calc_power_and_print(9, 3);
    calc_power_and_print(2, 61)
end