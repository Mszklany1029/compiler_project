let    
        
    type arr = array of int    
    
    function mod(a : int, b : int) =    
        a - b * (a/b)    
    
    function linearCongruentialGenerator(seed : int, m : int, a : int, c : int, num : int) =     
        let    
            var randomNums := arr[num] of 0    
        in     
            randomNums[0] := seed;    
            for i := 1 to num do(    
                randomNums[i] := mod((randomNums[i - 1] * a) + c, m)     
                );    
            printRand(randomNums, num)    
        end    
    
    function printint(i: int) =    
      let function f(i:int) = if i>0     
             then (f(i/10); print(chr(i-i/10*10+ord("0"))))    
       in if i<0 then (print("-"); f(-i))    
          else if i>0 then f(i)    
          else print("0")    
      end    
        
    function printRand(a : arr, length : int) =    
        let    
            var randomNum : string := ""    
            var temp : int := 0    
        in     
            for i := 0 to length do(    
                temp := a[i];    
                printint(temp)    
            )    
        end    
    
    
in     
    
linearCongruentialGenerator(5, 7, 3, 3, 10)    
    
end    
