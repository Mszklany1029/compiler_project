/* Binary Search */
let
    type int_array = array of int
    function binarySearch(arr: int_array, to_find: int, s: int) : int =
        let
            var left := 0
            var right := s-1
            var found := -1
        in
            while left <= right do
                let
                    var mid := (left + right) / 2
                in
                    if arr[mid] = to_find then
                        (
                            found := mid; /* Return index of found element */
                            break
                        )
                    else if arr[mid] < to_find then
                        left := mid + 1
                    else
                        right := mid - 1
                end
            ;
            found /* Returns -1 if element not found, or the index */
        end
in
    let
        var arr := int_array[10] of 0
        var to_find := 7
        var s := 10 /* size of array */
    in
        for i := 1 to 10 do arr[i-1] := i;
        /* arr = [1,2,3,4,5,6,7,8,9,10] */
        print(binarySearch(arr, target, s))
    end
end
