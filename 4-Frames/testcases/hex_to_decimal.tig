/* Program to convert a hex number to decimal */
let
    var ASCII_VAL_OF_0 : int := 48
    var ASCII_VAL_OF_A : int := 65
    /* Hex value must be in format 0xDDDDDDD and include capital letters for letter digits */
    function hexToDec (inHex : string) : int = 
        let
            var stripped : string := substring(inHex, 2, size(inHex)-1)
            var result : int := 0
            var numDigs : int := size(stripped)
            function pow (num : int, exp : int): int =
                if exp = 0 then 1 else num * pow(num, exp - 1)
            var digit : int := 0
            function digitStringToInt (digit : string) : int =
                let
                    var ordindal : int := ord(digit)
                in
                    if ordindal < 65 then
                        ordindal - ASCII_VAL_OF_0
                    else
                        ordindal + 10 - ASCII_VAL_OF_A
                    end

        in
            for i := 0 to numDigs-1 do (
                digit := digitStringToInt(substring(stripped, i, numDigs));
                result := result + digit * pow(16, (numDigs - 1 - i))
            );
            result
        end
    function intToString (asInt : int) : string = 
        let
            var result : string := ""
            var remain : int := asInt
            var digit : int := 0
        in
            if asInt = 0 then result := "0" else 
                while remain > 0 do (
                    digit := remain - (remain / 10) * 10;
                    result := concat(chr(digit + ASCII_VAL_OF_0), result);
                    remain := remain / 10
                );
            result
        end
        /*
            1234      - 0
            123       - 1
            12        - 2
            1         - 3
            0         - 4

        */
in
    print(intToString(hexToDec("0x1234ABCD")))
end
